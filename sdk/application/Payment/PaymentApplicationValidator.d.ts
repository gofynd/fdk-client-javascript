export = PaymentValidator;
declare class PaymentValidator {
    static addBeneficiaryDetails(): any;
    static addRefundBankAccountUsingOTP(): any;
    static attachCardToCustomer(): any;
    static cancelPaymentLink(): any;
    static checkAndUpdatePaymentStatus(): any;
    static checkAndUpdatePaymentStatusPaymentLink(): any;
    static checkCredit(): any;
    static createOrderHandlerPaymentLink(): any;
    static createPaymentLink(): any;
    static customerCreditSummary(): any;
    static customerOnboard(): any;
    static deleteUserCard(): any;
    static enableOrDisableRefundTransferMode(): any;
    static getActiveCardAggregator(): any;
    static getActiveRefundTransferModes(): any;
    static getActiveUserCards(): any;
    static getAggregatorsConfig(): any;
    static getEpaylaterBannerDetails(): any;
    static getOrderBeneficiariesDetail(): any;
    static getPaymentLink(): any;
    static getPaymentModeRoutes(): any;
    static getPaymentModeRoutesPaymentLink(): any;
    static getPosPaymentModeRoutes(): any;
    static getRupifiBannerDetails(): any;
    static getUserBeneficiariesDetail(): any;
    static initialisePayment(): any;
    static initialisePaymentPaymentLink(): any;
    static pollingPaymentLink(): any;
    static redirectToAggregator(): any;
    static renderHTML(): any;
    static resendOrCancelPayment(): any;
    static resendPaymentLink(): any;
    static updateDefaultBeneficiary(): any;
    static validateVPA(): any;
    static verifyAndChargePayment(): any;
    static verifyCustomerForPayment(): any;
    static verifyIfscCode(): any;
    static verifyOtpAndAddBeneficiaryForBank(): any;
    static verifyOtpAndAddBeneficiaryForWallet(): any;
}
