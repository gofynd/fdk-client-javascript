export = CartValidator;
declare class CartValidator {
    static addAddress(): any;
    static addItems(): any;
    static addPriceAdjustment(): any;
    static applyCoupon(): any;
    static checkCartServiceability(): any;
    static checkoutCart(): any;
    static createCartMetaConfig(): any;
    static createCoupon(): any;
    static createPromotion(): any;
    static deleteCart(): any;
    static fetchAndvalidateCartItems(): any;
    static fetchCartMetaConfig(): any;
    static getAbandonedCart(): any;
    static getAbandonedCartDetails(): any;
    static getAddressById(): any;
    static getAddresses(): any;
    static getAppCoupons(): any;
    static getAvailableDeliveryModes(): any;
    static getCart(): any;
    static getCartList(): any;
    static getCartShareLink(): any;
    static getCartSharedItems(): any;
    static getCouponById(): any;
    static getCouponCodeExists(): any;
    static getCouponOptionValues(): any;
    static getCoupons(): any;
    static getItemCount(): any;
    static getPromosCouponConfig(): any;
    static getPromotionById(): any;
    static getPromotionCodeExists(): any;
    static getPromotions(): any;
    static getShipments(): any;
    static getStoreAddressByUid(): any;
    static overrideCart(): any;
    static platformAddItems(): any;
    static platformCheckoutCart(): any;
    static platformCheckoutCartV2(): any;
    static platformUpdateCart(): any;
    static removeAddress(): any;
    static removeCoupon(): any;
    static removePriceAdjustment(): any;
    static selectAddress(): any;
    static selectPaymentMode(): any;
    static selectPaymentModeV2(): any;
    static updateAddress(): any;
    static updateCart(): any;
    static updateCartMeta(): any;
    static updateCartMetaConfig(): any;
    static updateCartUser(): any;
    static updateCartWithSharedItems(): any;
    static updateCoupon(): any;
    static updateCouponPartially(): any;
    static updatePriceAdjustment(): any;
    static updatePromotion(): any;
    static updatePromotionPartially(): any;
    static updateShipments(): any;
    static validateCouponForPayment(): any;
}
